import React from 'react';
import Image from 'next/image';
import { CheckCircle, Users, Globe, BookOpen, Zap, Star, TrendingUp, Award, ArrowRight } from 'lucide-react';
import { Metadata } from 'next';
import MissionAccordion from '@/app/components/mission-accordion';

// ISR Configuration - Revalidate every 3600 seconds (1 hour)
export const revalidate = 3600;

// SEO Metadata
export const metadata: Metadata = {
	title: 'V·ªÅ Ch√∫ng T√¥i | B√°ch Khoa Technology',
	description:
		'T·∫ßm nh√¨n c·ªßa ch√∫ng t√¥i l√† x√¢y d·ª±ng m·ªôt h·ªá th·ªëng gi√°o d·ª•c hi·ªán ƒë·∫°i, ti√™n ti·∫øn v√† c√¥ng b·∫±ng cho t∆∞∆°ng lai gi√°o d·ª•c Vi·ªát Nam.',
	keywords: 'gi√°o d·ª•c hi·ªán ƒë·∫°i, c√¥ng ngh·ªá gi√°o d·ª•c, LMS, B√°ch Khoa Technology, chuy·ªÉn ƒë·ªïi s·ªë',
	openGraph: {
		title: 'V·ªÅ Ch√∫ng T√¥i | B√°ch Khoa Technology',
		description:
			'Kh√°m ph√° t·∫ßm nh√¨n v√† s·ª© m·ªánh c·ªßa B√°ch Khoa Technology trong vi·ªác x√¢y d·ª±ng h·ªá th·ªëng gi√°o d·ª•c hi·ªán ƒë·∫°i.',
		type: 'website',
		images: ['/images/logo.png'],
	},
};

// Static data that could be fetched from CMS/API in real scenario
async function getAboutData() {
	// Simulate API call delay
	await new Promise((resolve) => setTimeout(resolve, 100));

	return {
		hero: {
			title: 'V·ªÄ CH√öNG T√îI',
			description:
				'T·∫ßm nh√¨n c·ªßa ch√∫ng t√¥i l√† x√¢y d·ª±ng m·ªôt h·ªá th·ªëng gi√°o d·ª•c hi·ªán ƒë·∫°i, ti√™n ti·∫øn v√† c√¥ng b·∫±ng, n∆°i m√† m·ªçi h·ªçc sinh, sinh vi√™n ƒë·ªÅu c√≥ th·ªÉ ti·∫øp c·∫≠n v√† t·∫≠n h∆∞·ªüng nh·ªØng th√†nh t·ª±u khoa h·ªçc hi·ªán ƒë·∫°i, s√°ng t·∫°o v√† c√≥ th·ªÉ ti·∫øp c·∫≠n v·ªõi c√°c m√¥ h√¨nh v√† th·ª±c tr·∫°ng trong t∆∞∆°ng lai.',
		},
		features: [
			{
				id: 1,
				title: 'Gi√°o D·ª•c Hi·ªán ƒê·∫°i',
				description:
					'Ch√∫ng t√¥i cam k·∫øt ƒë∆∞a gi√°o d·ª•c Vi·ªát Nam l√™n t·∫ßm cao m·ªõi b·∫±ng c√°ch √°p d·ª•ng nh·ªØng c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t, gi√∫p ra m·ªôt m√¥i tr∆∞·ªùng h·ªçc t·∫≠p linh ho·∫°t, s√°ng t·∫°o v√† ph√π h·ª£p v·ªõi h∆∞·ªõng to√†n c·∫ßu.',
				image: '/images/about-01.png',
				color: 'from-blue-500 to-cyan-500',
				textColor: 'text-cyan-600',
			},
			{
				id: 2,
				title: 'T√≠ch H·ª£p C√¥ng Ngh·ªá',
				description:
					'Ch√∫ng t√¥i t·∫≠n d·ª•ng s·ª©c m·∫°nh c·ªßa c√¥ng ngh·ªá ƒë·ªÉ t·ªëi ∆∞u h√≥a qu√° tr√¨nh h·ªçc t·∫≠p v√† gi·∫£ng d·∫°y. T·ª´ h·ªá th·ªëng qu·∫£n l√Ω ƒë√†o t·∫°o LMS ƒë·∫øn c√°c c√¥ng c·ª• h·ªó tr·ª£ h·ªçc t·∫≠p AI, ch√∫ng t√¥i mang ƒë·∫øn tr·∫£i nghi·ªám h·ªçc t·∫≠p ƒëa d·∫°ng v√† phong ph√∫.',
				image: '/images/about-02.jpg',
				color: 'from-green-500 to-emerald-500',
				textColor: 'text-green-600',
			},
			{
				id: 3,
				title: 'B√¨nh ƒê·∫≥ng V√† Ti·∫øp C·∫≠n M·ªçi Ng∆∞·ªùi',
				description:
					'T·∫ßm nh√¨n c·ªßa ch√∫ng t√¥i kh√¥ng ch·ªâ l√† s·ª± ti·∫øn b·ªô m√† c√≤n v·ªÅ s·ª± c√¥ng b·∫±ng. Ch√∫ng t√¥i t·∫≠p trung thi·∫øt k·∫ø c√°c gi·∫£i ph√°p ƒë·ªÉ m·ªçi h·ªçc sinh, sinh vi√™n kh√¥ng ph·ª• thu·ªôc v√†o v√πng mi·ªÅn hay ƒëi·ªÅu ki·ªán kinh t·∫ø ƒë·ªÅu c√≥ th·ªÉ h·ªçc t·∫≠p v√† ph√°t tri·ªÉn.',
				image: '/images/about-03.jpg',
				color: 'from-purple-500 to-pink-500',
				textColor: 'text-purple-600',
			},
			{
				id: 4,
				title: 'S·ª± H·ªó Tr·ª£ Cho H·ªá Th·ªëng Gi√°o D·ª•c To√†n C·∫ßu',
				description:
					'Ch√∫ng t√¥i nh√¨n xa h∆°n bi√™n gi·ªõi qu·ªëc gia, h∆∞·ªõng ƒë·∫øn vi·ªác cung c·∫•p c√°c gi·∫£i ph√°p chuy√™n ƒë·ªôi ƒë·ªÉ cho c√°c h·ªá th·ªëng gi√°o d·ª•c ·ªü nh·ªØng qu·ªëc gia ph√°t tri·ªÉn c√≥ nhi·ªÅu h·ªá th·ªëng gi√°o d·ª•c hi·ªán ƒë·∫°i v√† ti√™n b·ªô.',
				image: '/images/about-04.png',
				color: 'from-orange-500 to-red-500',
				textColor: 'text-orange-600',
			},
			{
				id: 5,
				title: 'Ch·ªß ƒê·ªông T√¨m Ki·∫øm C√¥ng Ngh·ªá M·ªõi',
				description:
					'Ch√∫ng t√¥i cam k·∫øt ƒë·ª©ng ƒë·∫ßu trong vi·ªác nghi√™n c·ª©u v√† ph√°t tri·ªÉn c√¥ng ngh·ªá m·ªõi, nh∆∞ tr√≠ tu·ªá nh√¢n t·∫°o, blockchain ƒë·ªÉ ƒë·∫£m b·∫£o r·∫±ng gi√°o d·ª•c c·ªßa ch√∫ng ta lu√¥n th√≠ch ·ª©ng v·ªõi nh·ªØng ƒë·ªïi m·ªõi ti√™n ti·∫øn.',
				image: '/images/robot.png',
				color: 'from-indigo-500 to-blue-500',
				textColor: 'text-indigo-600',
			},
		],
		technologies: [
			{ title: 'Tr√≠ tu·ªá nh√¢n t·∫°o', icon: 'ü§ñ', desc: 'AI h·ªó tr·ª£ h·ªçc t·∫≠p c√° nh√¢n h√≥a' },
			{ title: 'Blockchain', icon: 'üîó', desc: 'B·∫£o m·∫≠t v√† x√°c th·ª±c h·ªçc b·∫°' },
			{ title: 'IoT', icon: 'üì±', desc: 'K·∫øt n·ªëi thi·∫øt b·ªã th√¥ng minh' },
			{ title: 'Big Data', icon: 'üìä', desc: 'Ph√¢n t√≠ch d·ªØ li·ªáu gi√°o d·ª•c' },
		],
		stats: [
			{ value: '10+', label: 'NƒÉm kinh nghi·ªám', color: 'text-blue-300' },
			{ value: '500+', label: 'ƒê·ªëi t√°c gi√°o d·ª•c', color: 'text-green-300' },
			{ value: '1M+', label: 'H·ªçc sinh, sinh vi√™n', color: 'text-purple-300' },
		],
		coreValues: [
			'ƒê·ªïi m·ªõi s√°ng t·∫°o kh√¥ng ng·ª´ng',
			'Ch·∫•t l∆∞·ª£ng v√† hi·ªáu qu·∫£',
			'Ti·∫øp c·∫≠n b√¨nh ƒë·∫≥ng',
			'H·ª£p t√°c v√† chia s·∫ª',
		],
	};
}

const AboutPage = async () => {
	const data = await getAboutData();

	return (
		<div className='min-h-screen bg-white'>
			{/* Hero Section */}
			<section className='relative py-10 lg:py-16 overflow-hidden'>
				<div className='absolute inset-0 bg-slate-800'></div>
				<div className='container-lg relative z-10'>
					<div className='text-center max-w-4xl mx-auto text-white'>
						<h1 className='text-2xl lg:text-3xl font-black mb-8'>{data.hero.title}</h1>
						<div className='flex justify-center mb-12'>
							<Image
								src='/images/logo.png'
								alt='B√°ch Khoa Technology Logo'
								width={400}
								height={200}
								className='object-contain'
								priority
							/>
						</div>
						<p className='text-lg lg:text-xl leading-relaxed'>{data.hero.description}</p>
					</div>
				</div>
			</section>

			{/* Main Content */}
			<section className='py-4 lg:py-8'>
				<div className='container-lg'>
					{/* Features */}
					{data.features.map((feature, index) => (
						<div key={feature.id} className='mb-4 lg:mb-8'>
							<div className='grid lg:grid-cols-2 gap-12 lg:gap-16 items-center'>
								{/* Text Content */}
								<div className={`${index % 2 === 0 ? 'lg:order-1' : 'lg:order-2'}`}>
									<div className='flex items-center mb-6'>
										<div
											className={`size-14 lg:size-16 bg-gradient-to-r ${feature.color} rounded-full flex items-center justify-center text-white text-2xl lg:text-3xl font-bold shadow-lg px-6 py-1`}
										>
											{feature.id}
										</div>
										<h2 className={`text-2xl lg:text-4xl font-bold ${feature.textColor} ml-6`}>
											{feature.title}
										</h2>
									</div>
									<p className='text-gray-700 text-lg leading-relaxed'>{feature.description}</p>
								</div>

								{/* Image */}
								<div className={`${index % 2 === 0 ? 'lg:order-2' : 'lg:order-1'}`}>
									<div className='relative rounded-2xl overflow-hidden'>
										<Image
											src={feature.image}
											alt={feature.title}
											width={600}
											height={400}
											className='w-full h-auto object-cover'
											loading='lazy'
										/>
										<div
											className={`absolute inset-0 bg-gradient-to-t ${feature.color
												.replace('to-', 'to-')
												.replace('from-', 'from-')
												.replace('-500', '-600/20')
												.replace('-400', '-600/20')} to-transparent`}
										></div>
									</div>
								</div>
							</div>
						</div>
					))}

					<MissionAccordion />

					{/* Mission & Vision Section */}
					<div className='bg-gradient-to-r from-slate-800 to-blue-800 rounded-3xl p-8 lg:p-12 text-white'>
						<div className='max-w-4xl mx-auto text-center'>
							<h2 className='text-2xl lg:text-3xl font-bold mb-8'>
								Th√¥ng qua t·∫ßm nh√¨n v√† s·ª© m·ªánh n√†y, ch√∫ng t√¥i hy v·ªçng c√≥ th·ªÉ l√† m·ªôt ƒë·ªëi t√°c ƒë√°ng tin c·∫≠y,
								ƒë·ªìng h√†nh v·ªõi Ng√†nh gi√°o d·ª•c Vi·ªát Nam tr√™n con ƒë∆∞·ªùng chuy·ªÉn ƒë·ªïi s·ªë v√† ph√°t tri·ªÉn b·ªÅn
								v·ªØng. Ch√∫ng t√¥i mong mu·ªën h·ª£p t√°c ch·∫∑t ch·∫Ω v·ªõi c√°c b√™n li√™n quan nh∆∞ tr∆∞·ªùng h·ªçc, t·ªï ch·ª©c
								gi√°o d·ª•c, v√† c·ªông ƒë·ªìng ƒë·ªÉ c√πng nhau ƒë·ªãnh h√¨nh m·ªôt t∆∞∆°ng lai gi√°o d·ª•c t·ªët ƒë·∫πp h∆°n cho
								Vi·ªát Nam.
							</h2>
							<div className='grid md:grid-cols-3 gap-8 mb-8'>
								{data.stats.map((stat, index) => (
									<div key={index} className='text-center'>
										<div className={`text-4xl font-bold ${stat.color} mb-2`}>{stat.value}</div>
										<p className='text-blue-100'>{stat.label}</p>
									</div>
								))}
							</div>
						</div>
					</div>
				</div>
			</section>
		</div>
	);
};

export default AboutPage;
